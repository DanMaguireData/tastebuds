rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Rule for the 'users' collection
    match /users/{userId} {
      // ANY authenticated user can read a user's profile.
      // Useful for features like seeing who created a recipe.
      allow read: if request.auth != null;

      // ONLY the user themselves can create their own profile document.
      // We check that the incoming data's uid matches the user's auth uid.
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // ONLY the user themselves can update their own profile document.
      allow update: if request.auth != null && request.auth.uid == userId;
      
      // Generally, users should not be able to delete their profile document.
      // We can add a rule for this later if needed (e.g., via a cloud function).
      allow delete: if false;
    }
    
     match /recipes/{recipeId} {
      // READ: A user can only read recipes that they own OR that are marked as public.
      allow read: if request.auth != null && (resource.data.ownerId == request.auth.uid || resource.data.isPublic == true);

      // CREATE: A user can create a new recipe if they are logged in and
      // the 'ownerId' of the new recipe they are creating matches their own UID.
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      
      // UPDATE, DELETE: A user can only update or delete a recipe if they are its owner.
      allow update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
    }
  
    }}